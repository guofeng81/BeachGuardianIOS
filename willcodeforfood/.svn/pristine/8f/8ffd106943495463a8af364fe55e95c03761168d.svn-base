import UIKit
import Foundation
import AWSCognitoIdentityProvider
import AWSCore

struct AlertProvider {
    
    static var failAuth = "Incorrect username or password."
    static var emptyAuth = "No username or password provided."
    static var newPasswordDoesNotMatch = "Password does not match"
    static var newPasswordDoesNotMeetRequirements = "Password does not match password policy:\n* Must be at least 8 characters\n* Must have a number\n* Must have a special character\n* Must have an uppercase letter\n* Must have a lowercase letter"
    static var missingRequiredAttribute = "Missing a required attribute. Please contact admin regarding"
    static var invalidRequiredAttribute = "Submitted form does not meet user sign-up requirements."
    static var defaultSignUpError = "Sign-up unexpectedly found invalid. Please contact an admin regarding this error."
    
    
    
    
    static func forCognitoSignIn(errType: String)-> UIAlertController{
        let action: UIAlertAction = UIAlertAction(title: "Retry", style: .default, handler: nil)
        let alertType: String = "Login failed"
        
        var alertController: UIAlertController
        var message: String = ""
        
        switch(errType){
        case "InternalErrorException",
             "InvalidLambdaResponseException",
             "InvalidUserPoolConfigurationException",
             "PasswordResetRequiredException",
             "ResourceNotFoundException",
             "TooManyRequestsException",
             "UnexpectedLambdaException",
             "UserLambdaValidationException",
             "UserNotConfirmedException":
            message = "\(errType) encountered. Please contact an admin regarding this error."
            
            break
            
        case "NotAuthorizedException", "UserNotFoundException":
            message = failAuth
            break
            
        case "InvalidParameterException":
            message = emptyAuth
            break
            
        default:
            message = "Unexpected \(errType) encountered. Please contact an admin regarding this error."
            break
        }
        alertController = UIAlertController(title: alertType, message: message, preferredStyle: .alert)
        alertController.addAction(action)
        return alertController
    }
    
    static func forCognitoSignUp(errType: String) -> UIAlertController {
        let action: UIAlertAction = UIAlertAction(title: "Retry", style: .default, handler: nil)
        let alertType: String = "Sign-Up failed"
        
        var alertController: UIAlertController
        var message: String
        
        switch(errType){
        case "PasswordDoesNotMatch":
            message = newPasswordDoesNotMatch
            
            break
        case "PasswordDoesNotMeetRequirements":
            message = newPasswordDoesNotMeetRequirements
            break
            
        case "MissingRequiredAttributes":
            message = missingRequiredAttribute
            break
            
        case "InvalidFormatFound":
            message = invalidRequiredAttribute
            break
            
        default:
            message = "Sign-up unexpectedly found invalid. Please contact an admin regarding this error."
            break
        }
        alertController = UIAlertController(title: alertType, message: message, preferredStyle: .alert)
        alertController.addAction(action)
        return alertController
    }
}
