//
//  MainTabBar.swift
//  BeachGuardian
//
//  Created by Edward Lie on 3/2/19.
//  Copyright Â© 2019 Sebastian Macedonio. All rights reserved.
//

import UIKit

class MainTabBar: UITabBar, UIImagePickerControllerDelegate, UINavigationControllerDelegate{
    
    var service: UIImagePickerController?
    public var middleButton = UIButton()
    override func awakeFromNib(){
        super.awakeFromNib()
        setupMiddleButton()
        //self.delegateForCamera = self
    }
    
    override func hitTest(_ point: CGPoint, with event: UIEvent?) -> UIView? {
        if self.isHidden {
            return super.hitTest(point, with: event)
        }
        
        let from = point
        let to = middleButton.center
        
        return sqrt((from.x - to.x) * (from.x - to.x) + (from.y - to.y) * (from.y - to.y)) <= 39 ? middleButton : super.hitTest(point, with: event)
    }
    
    func setupMiddleButton() {
        middleButton.frame.size = CGSize(width: 70, height: 70)
        let image = UIImage(named: "camera3")! as UIImage
        middleButton.setImage(image, for: .normal)
        middleButton.backgroundColor = .white
        middleButton.layer.cornerRadius = 35
        middleButton.layer.masksToBounds = true
        middleButton.center = CGPoint(x: UIScreen.main.bounds.width / 2, y: 0)
        middleButton.addTarget(self, action: #selector(openPhotoActionPicker), for: .touchUpInside)
        addSubview(middleButton)
    }
    
    public var boolMarker = false
    //var delegateForCamera : CameraProtocol!
    
    public var imagePicker : UIImagePickerController! = nil
    
    @objc func openPhotoActionPicker()
    {
        openCamera()
    }
    
    func openCamera(serviceProvider: UIImagePickerController.Type = UIImagePickerController.self){
        imagePicker = serviceProvider.init()
        imagePicker.delegate = self
        let actionSheet = UIAlertController(title: "Photo Source", message: "Choose a source", preferredStyle:.actionSheet)
        actionSheet.addAction(UIAlertAction(title: "Camera", style:.default, handler:{(action: UIAlertAction) in
            if serviceProvider.isSourceTypeAvailable(.camera)
            {
                self.imagePicker.sourceType = UIImagePickerController.SourceType(rawValue: 1)!
                UIApplication.shared.keyWindow?.rootViewController?.present(self.imagePicker, animated: true, completion: nil)
            }
        }))
        
        actionSheet.addAction(UIAlertAction(title: "Camera Roll",style: .default, handler: { (action:UIAlertAction) in
            self.imagePicker.sourceType = .savedPhotosAlbum
            UIApplication.shared.keyWindow?.rootViewController?.present(self.imagePicker, animated: true, completion: nil)
        }))
        
        actionSheet.addAction(UIAlertAction(title: "Cancel", style: .cancel, handler: nil))
        
        if let popoverController = actionSheet.popoverPresentationController {
            popoverController.barButtonItem = UIBarButtonItem(customView: middleButton)
        }
        
        UIApplication.shared.keyWindow?.rootViewController?.present(actionSheet, animated: true, completion: nil)
    }
    
    @objc func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        guard let selectedImage = info[UIImagePickerController.InfoKey.originalImage] as? UIImage
            else{
                boolMarker = true
                return
        }
        
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let view = storyboard.instantiateViewController(withIdentifier: "MissingPersonTableViewController") as! MissingPersonTableViewController
        view.holderImage = selectedImage as UIImage
        
        view.navigationItem.leftBarButtonItem = UIBarButtonItem(title: "Go Back", style: .plain, target: self, action: #selector(goBack))
        let navController = UINavigationController(rootViewController: view)
        UIApplication.topViewController()?.present(navController, animated: true)
    }
    
    @objc func goBack(){
        UIApplication.topViewController()?.dismiss(animated: true, completion: nil)
    }
}

extension UIApplication {
    class func topViewController(base: UIViewController? = UIApplication.shared.keyWindow?.rootViewController) -> UIViewController? {
        if let nav = base as? UINavigationController {
            return topViewController(base: nav.visibleViewController)
        }
        if let tab = base as? UITabBarController {
            if let selected = tab.selectedViewController {
                return topViewController(base: selected)
            }
        }
        if let presented = base?.presentedViewController {
            return topViewController(base: presented)
        }
        return base
    }
}

