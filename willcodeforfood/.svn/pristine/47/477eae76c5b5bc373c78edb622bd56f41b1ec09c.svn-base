//
//  MarineAnimalsFormTableViewController.swift
//  BeachGuardian
//
//  Created by sanaz farhadi on 4/19/19.
//  Copyright © 2019 Sebastian Macedonio. All rights reserved.
//

import UIKit
import AWSS3

class MarineAnimalsFormTableViewController: UITableViewController,UIPickerViewDelegate, UIPickerViewDataSource, UITextViewDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate  {
    
    var contentURL: URL!
    var s3Url: URL!
    var bucketName = "lifehaloios-deployments-mobilehub-641691893"
    var s3Error = false
    public var imagePicker : UIImagePickerController! = nil
    
    let Animals = ["Jelly Fish/Medusa", "Fish/Pez", "Shark/Tiburón", "Snake/Serpiente","Turtle/Tortuga", "Other/Otro"]
    let viewTapGestureRec = UITapGestureRecognizer(target: self, action: #selector(tap(recognizer:)))
    var uiApplication: UIApplicationProtocol?
    var selectedAnimal = ""
    var additionalInfo = ""
    var UInDanger = false
    var othersInDanger = false
    var sliderValue = 5
    
    @IBOutlet weak var AnimalPicker: UIPickerView!
    @IBOutlet weak var CellTwoYES: UIButton!
    @IBOutlet weak var CellTwoNO: UIButton!
    @IBOutlet weak var CellThreeYES: UIButton!
    @IBOutlet weak var CellThreeNO: UIButton!
    @IBOutlet weak var CallButton: RoundedButton!
    @IBOutlet weak var textView: UITextView!
    @IBOutlet weak var TowerSlider: UISlider!
    @IBOutlet weak var TowerLabel: UILabel!
    override func viewDidLoad() {
        super.viewDidLoad()
        
        AnimalPicker.delegate = self 
        AnimalPicker.dataSource = self
        AnimalPicker.tag = 1
        AnimalPicker.accessibilityIdentifier = "picker-animal"
        
        textView.delegate = self
        textView.layer.cornerRadius = 10
        textView.text = "200 Character Limit."
        textView.textColor = UIColor.lightGray
        
        viewTapGestureRec.cancelsTouchesInView = false
        self.view.addGestureRecognizer(viewTapGestureRec)
    }

    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 6
    }

    @objc func tap(recognizer: UIGestureRecognizer) {
       textView.resignFirstResponder()
    }
   
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
    
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return Animals.count
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        return pickerViewSelect(tag: pickerView.tag, row: row)
    }
    
    func pickerViewSelect (tag: Int, row: Int){
        selectedAnimal = Animals[row]
    }
    
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        return Animals[row]
    }
    
    @IBAction func IAmInDanger(_ sender: UIButton) {
        UInDanger = true
        sender.isSelected = !sender.isSelected
        
        if CellTwoNO.isSelected{
            CellTwoNO.isSelected = !CellTwoNO.isSelected
        }
    }
   
    @IBAction func IAmNOTInDanger(_ sender: UIButton) {
        UInDanger = false
        sender.isSelected = !sender.isSelected
        
        if CellTwoYES.isSelected{
            CellTwoYES.isSelected = !CellTwoYES.isSelected
        }
    }

    @IBAction func OthersInDanger(_ sender: UIButton) {
        othersInDanger = true
        sender.isSelected = !sender.isSelected
        
        if CellThreeNO.isSelected{
            CellThreeNO.isSelected = !CellThreeNO.isSelected
        }
    }

    @IBAction func OthersNOTInDanger(_ sender: UIButton) {
        othersInDanger = false
        sender.isSelected = !sender.isSelected
        
        if CellThreeYES.isSelected{
            CellThreeYES.isSelected = !CellThreeYES.isSelected
        }
    }

    @IBAction func SliderValueChanged(_ sender: UISlider) {
        TowerLabel.text = "\(Int(TowerSlider.value))"
        sliderValue = Int(TowerSlider.value)
    }
    
    func textViewDidBeginEditing(_ textView: UITextView) {
        textView.becomeFirstResponder()
        if textView.textColor == UIColor.lightGray {
            textView.text = nil
            textView.becomeFirstResponder()
            textView.textColor = UIColor.black
        }
    }
    
    func textView(_ textView: UITextView, shouldChangeTextIn range: NSRange, replacementText text: String) -> Bool {
        return textView.text.count + (text.count - range.length) <= 200
    }
    
    func textViewDidEndEditing(_ textView: UITextView) {
        additionalInfo = textView.text
    }

    @IBAction func uploadPhoto(_ sender: Any) {
        let imagePickerController = UIImagePickerController()
        imagePickerController.delegate = self as UIImagePickerControllerDelegate & UINavigationControllerDelegate
        imagePickerController.sourceType = .photoLibrary
        self.present(imagePickerController, animated: true, completion: nil)
    }
    
    @IBAction func takePhoto(_ sender: Any) {
      openCamera()
    }
    
    func openCamera(serviceProvider: UIImagePickerController.Type = UIImagePickerController.self)
    {
        imagePicker = serviceProvider.init()
        imagePicker.delegate = self
        if serviceProvider.isSourceTypeAvailable(.camera){
            self.imagePicker.sourceType = .camera
            self.present(imagePicker, animated: true, completion: nil)
        }
    }
    
    @objc func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        guard let selectedImage = info[UIImagePickerController.InfoKey.originalImage] as? UIImage
            else{
                return
        }
        marineAnimalsImage.image = selectedImage
        picker.dismiss(animated: true, completion: nil)
    }
    
    @IBOutlet weak var marineAnimalsImage: UIImageView!
    
    @IBAction func submitReport(_ sender: Any)
    {
        let alert = UIAlertController(title: nil, message: "Please wait...", preferredStyle: .alert)
        let loadingIndicator = UIActivityIndicatorView(frame: CGRect(x: 10, y: 5, width: 50, height: 50))
        loadingIndicator.hidesWhenStopped = true
        loadingIndicator.style = UIActivityIndicatorView.Style.gray
        loadingIndicator.startAnimating();
        alert.view.addSubview(loadingIndicator)
        submitReportUsingPhoto(marineAnimalsImage: marineAnimalsImage)
    }
    
    func submitReportUsingPhoto(marineAnimalsImage : UIImageView? ){
        s3Url = AWSS3.default().configuration.endpoint.url
        guard (marineAnimalsImage?.image) != nil else {
            displayNoPictureMessage()
            return
        }
        
        let fileName = "marineAnimals.png"
        let fileURL = URL(fileURLWithPath: NSTemporaryDirectory()).appendingPathComponent(fileName)
        let key = ProcessInfo.processInfo.globallyUniqueString + ".png"
        let imageData = marineAnimalsImage?.image?.jpegData(compressionQuality: 1.0)
        do
        {
            try imageData!.write(to: fileURL, options: [.atomic])
        }
        catch{}
        let transferUtility = AWSS3TransferUtility.default()
        processRequest(transferUtility : transferUtility, key: key, fileURL: fileURL){ success in }
    }
    
    func processRequest(transferUtility : AWSS3TransferUtility, key: String, fileURL: URL, completion: @escaping(Bool) ->()){
        transferUtility.uploadFile(fileURL, bucket: S3Configuration.BUCKET_NAME.rawValue, key: key, contentType: "image/png", expression: nil, completionHandler: nil).continueWith {
            (task) -> AnyObject? in
            if task.error != nil{
                self.s3Error = true
                completion(true)
                return nil
            }
            
            if let _ = task.result {
            }
            self.displaySubmittedMessage()
            self.s3Error = false
            return nil
        }
    }
    
    
    internal func dismissAlert() { if let vc = self.presentedViewController, vc is UIAlertController { dismiss(animated: false, completion: nil) }
        displaySubmittedMessage()
    }
    
    func displaySubmittedMessage()
    {
        let alertController = UIAlertController(title: "Report Submitted", message: "Your report has been submitted", preferredStyle: .alert)
        let OKAction = UIAlertAction(title: "OK", style: .default) {(action: UIAlertAction!) in }
        alertController.addAction(OKAction)
        self.present(alertController, animated: true, completion: nil)
    }
    
    func displayNoPictureMessage()
    {
        let alertController = UIAlertController(title: "No picture chosen", message: "You have not uploaded a picture to be submitted", preferredStyle: .alert)
        let OKAction = UIAlertAction(title: "OK", style: .default) {(action: UIAlertAction!) in }
        alertController.addAction(OKAction)
        self.present(alertController, animated: true, completion: nil)
    }
    
    @IBAction func CallMarineAnimalLine(_ sender: UIButton) {
        guard let url = URL(string: "tel://\(4097402200)") else { return
        }
        uiApplication?.open(url, options: [:], completionHandler: nil);
    }
}
